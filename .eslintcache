[{"/home/rushildp/petition/src/index.js":"1","/home/rushildp/petition/src/App.js":"2","/home/rushildp/petition/src/components/PetitionCard.jsx":"3","/home/rushildp/petition/src/components/Button.jsx":"4"},{"size":199,"mtime":1612401037044,"results":"5","hashOfConfig":"6"},{"size":225,"mtime":1612401039356,"results":"7","hashOfConfig":"6"},{"size":12322,"mtime":1612541051530,"results":"8","hashOfConfig":"6"},{"size":801,"mtime":1612406672052,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"rtfb2t",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/home/rushildp/petition/src/index.js",[],["19","20"],"/home/rushildp/petition/src/App.js",[],"/home/rushildp/petition/src/components/PetitionCard.jsx",["21","22","23"],"/home/rushildp/petition/src/components/Button.jsx",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":23,"column":7,"nodeType":"30","messageId":"31","endLine":23,"endColumn":16},{"ruleId":"32","severity":1,"message":"33","line":99,"column":25,"nodeType":"34","messageId":"35","endLine":99,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":144,"column":6,"nodeType":"38","endLine":144,"endColumn":8,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'media' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [media, props]",{"range":"45","text":"46"},[3993,3995],"[media, props]"]